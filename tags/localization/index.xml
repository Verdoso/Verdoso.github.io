<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Localization on GreenEyed's</title><link>https://www.greeneyed.org/tags/localization/</link><description>Recent content in Localization on GreenEyed's</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 17 Jul 2018 18:18:44 +0200</lastBuildDate><atom:link href="https://www.greeneyed.org/tags/localization/index.xml" rel="self" type="application/rss+xml"/><item><title>Real life Java: From numbers to localized text ordinals using ICU4J</title><link>https://www.greeneyed.org/post/real-life-java-from-numbers-to-localized-text-ordinals-using-icu4j/</link><pubDate>Tue, 17 Jul 2018 18:18:44 +0200</pubDate><guid>https://www.greeneyed.org/post/real-life-java-from-numbers-to-localized-text-ordinals-using-icu4j/</guid><description>Recently, I had to build a Java application that reads a series of data and puts “human readable” labels on it. Some of the texts the application has to generate use ordinals like “This is the **_first _**report…” and they have to be displayed in three different languages, so instead of using a non-scalable solution (if/else, switch), I decided to generate the messages from the numeric data using something more flexible.</description></item></channel></rss>