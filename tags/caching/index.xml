<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Caching on GreenEyed's</title><link>https://www.greeneyed.org/tags/caching/</link><description>Recent content in Caching on GreenEyed's</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 16 Oct 2017 21:09:38 +0200</lastBuildDate><atom:link href="https://www.greeneyed.org/tags/caching/index.xml" rel="self" type="application/rss+xml"/><item><title>Configuring Multiple TTL Caches in Spring Boot dinamically</title><link>https://www.greeneyed.org/post/configuring-multiple-ttl-caches-in-spring-boot-dinamically/</link><pubDate>Mon, 16 Oct 2017 21:09:38 +0200</pubDate><guid>https://www.greeneyed.org/post/configuring-multiple-ttl-caches-in-spring-boot-dinamically/</guid><description>Recently, I started using Spring caching in my Spring Boot applications and I came across a very nice entry in Daniel Olszewski’s blog (MULTIPLE TTL CACHES IN SPRING BOOT) that indeed explains how to set up multiple caches in Spring Boot with a specified TTL (Time To Live) setting and is really worth reading it as it even explains how to test the functionality. So, if you have not read it already, I invite you to do go ahead and do it now, as I’ll build on top of that.</description></item></channel></rss>